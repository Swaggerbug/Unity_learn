# Top-most EditorConfig file
root = true

# All files
[*]
indent_style = tab
indent_size = 4
end_of_line = crlf
charset = utf-8

# C# files
[*.cs]
# Use language conventions
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Use var only when type is apparent
csharp_style_var_for_built_in_types = false:none
csharp_style_var_when_type_is_apparent = true:none
csharp_style_var_elsewhere = false:none

# Expression-bodied members
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none
csharp_style_expression_bodied_properties = false:none
csharp_style_expression_bodied_indexers = false:none
csharp_style_expression_bodied_accessors = false:none

# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
dotnet_style_require_accessibility_modifiers = always:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# Code-block preferences
csharp_prefer_braces = true:silent

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion

# Casing preferences
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style    = pascal_case_style

dotnet_naming_symbols.constant_fields.applicable_kinds   = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities  =
dotnet_naming_symbols.constant_fields.required_modifiers  = const

dotnet_naming_rule.camel_case_for_private_internal_fields.severity  =
suggestion dotnet_naming_rule.camel_case_for_private_internal_fields.symbols  =
private_internal_fields dotnet_naming_rule.camel_case_for_private_internal_fields.style    =
camel_case_underscore_style

dotnet_naming_symbols.private_internal_fields.applicable_kinds   =
field dotnet_naming_symbols.private_internal_fields.applicable_accessibilities  =
private, internal dotnet_naming_symbols.private_internal_fields.required_modifiers  =

dotnet_naming_rule.pascal_case_for_public_fields.severity  =
suggestion dotnet_naming_rule.pascal_case_for_public_fields.symbols  =
public_fields dotnet_naming_rule.pascal_case_for_public_fields.style    =
pascal_case_no_underscore_style

dotnet_naming_symbols.public_fields.applicable_kinds   =
field dotnet_naming_symbols.public_fields.applicable_accessibilities  =
public, protected, protected_internal, private_protected dotnet_naming_symbols.public_fields.required_modifiers  =

dotnet_naming_rule.camel_case_for_parameters.severity  =
suggestion dotnet_naming_rule.camel_case_for_parameters.symbols  =
parameters dotnet_naming_rule.camel_case_for_parameters.style    =
camel_case_underscore_style

dotnet_naming_symbols.parameters.applicable_kinds   =
parameter dotnet_naming_symbols.parameters.applicable_accessibilities  =

dotnet_naming_rule.camel_case_for_local_variables.severity  =
suggestion dotnet_naming_rule.camel_case_for_local_variables.symbols  =
local_variables dotnet_naming_rule.camel_case_for_local_variables.style    =
camel_case_underscore_style

dotnet_naming_symbols.local_variables.applicable_kinds   =
local dotnet_naming_symbols.local_variables.applicable_accessibilities  =

dotnet_naming_rule.pascal_case_for_method_property_event.severity  =
suggestion dotnet_naming_rule.pascal_case_for_method_property_event.symbols